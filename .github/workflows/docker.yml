# automatically publishes v tags to dockerhub.
# so for instance v0.5.1 wil publish but randtom wont
name: Build and Publish Version Tags
on:
  push:
    tags:
      - "v*"

env:
  FRONTED_PORT: 4444
  FRONTEND_MONGO_SCHEME: "mongodb://mongo"
  FRONTEND_MONGO_DB_HOST: "mongo"
  FRONTEND_MONGO_PORT: 27017
  FRONTEND_MINIFY_JS: ON
  COOKIE_SECURE_OFF: yes
  API: "http://localhost:8111"
  IMAGE_API_URL: "http://localhost:3333"
  IMAGE_API_ACCESS_TOKEN: xxxx
  SITE_API_KEY: xxxx
  DEFAULT_DB: localhost2
  DEFAULT_HOST: "localhost:4444"
  APP_URL: "http://localhost:4444"
  APOS_BUNDLE: assets
  APOS_MINIFY: 1
  NODE_ENV: production

jobs:
  build:
    name: Build Docker image and push to repositories
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Git checkout
        uses: actions/checkout@v2

      # setup Docker buld action
      - name: Docker setup
        uses: docker/setup-buildx-action@v1
        id: buildx
        with:
          install: true

      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@1.3.0
        with:
          mongodb-version: 4.2

      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

      - name: Set CURRENT_BRANCH
        run: echo "CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD)" >> $GITHUB_ENV

      - run: mongo default --eval 'db.createUser({user:"travis",pwd:"test",roles:["readWrite"]});'

      - run: echo '${{ steps.extract_branch.outputs.branch }}' > branch.txt

      - run: npm install --production

      - run: npm run test -- --coverage

      - run: mkdir assets

      - run: NODE_ENV=production APOS_MINIFY=1 APOS_WORKFLOW=ON APOS_BUNDLE=assets node apostrophe.js apostrophe:generation  --create-bundle assets

      #   - name: tag number
      #        run : echo ${{ github.event.release.tag_name }}


      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build
        run: docker buildx build . -t openstad/frontend:${{ steps.get_version.outputs.VERSION }} -o type=registry

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

       